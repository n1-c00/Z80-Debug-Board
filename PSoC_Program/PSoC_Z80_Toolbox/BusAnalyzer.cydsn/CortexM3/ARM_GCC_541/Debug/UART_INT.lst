ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_RXISR,"ax",%progbits
  20              		.align	2
  21              		.global	UART_RXISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_RXISR, %function
  25              	UART_RXISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_INT.c"
   1:Generated_Source\PSoC5/UART_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_INT.c **** * File Name: UARTINT.c
   3:Generated_Source\PSoC5/UART_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_INT.c **** *
   5:Generated_Source\PSoC5/UART_INT.c **** * Description:
   6:Generated_Source\PSoC5/UART_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC5/UART_INT.c **** *
   8:Generated_Source\PSoC5/UART_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC5/UART_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/UART_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/UART_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/UART_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/UART_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/UART_INT.c **** 
  15:Generated_Source\PSoC5/UART_INT.c **** #include "UART.h"
  16:Generated_Source\PSoC5/UART_INT.c **** #include "cyapicallbacks.h"
  17:Generated_Source\PSoC5/UART_INT.c **** 
  18:Generated_Source\PSoC5/UART_INT.c **** 
  19:Generated_Source\PSoC5/UART_INT.c **** /***************************************
  20:Generated_Source\PSoC5/UART_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC5/UART_INT.c **** ***************************************/
  22:Generated_Source\PSoC5/UART_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC5/UART_INT.c **** 
  24:Generated_Source\PSoC5/UART_INT.c **** /* `#END` */
  25:Generated_Source\PSoC5/UART_INT.c **** 
  26:Generated_Source\PSoC5/UART_INT.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  27:Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_RXISR
  29:Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC5/UART_INT.c ****     *
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 2


  31:Generated_Source\PSoC5/UART_INT.c ****     * Summary:
  32:Generated_Source\PSoC5/UART_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC5/UART_INT.c ****     *
  34:Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
  35:Generated_Source\PSoC5/UART_INT.c ****     *  None.
  36:Generated_Source\PSoC5/UART_INT.c ****     *
  37:Generated_Source\PSoC5/UART_INT.c ****     * Return:
  38:Generated_Source\PSoC5/UART_INT.c ****     *  None.
  39:Generated_Source\PSoC5/UART_INT.c ****     *
  40:Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC5/UART_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC5/UART_INT.c ****     *     when UART_rxBufferWrite index overtakes
  48:Generated_Source\PSoC5/UART_INT.c ****     *     UART_rxBufferRead index.
  49:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC5/UART_INT.c ****     *     Set to one when UART_rxBufferWrite is equal to
  51:Generated_Source\PSoC5/UART_INT.c ****     *    UART_rxBufferRead
  52:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC5/UART_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC5/UART_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC5/UART_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC5/UART_INT.c ****     *
  58:Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_RXISR)
  60:Generated_Source\PSoC5/UART_INT.c ****     {
  28              		.loc 1 60 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L6:
  61:Generated_Source\PSoC5/UART_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC5/UART_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC5/UART_INT.c ****         uint8 increment_pointer = 0u;
  64:Generated_Source\PSoC5/UART_INT.c **** 
  65:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC5/UART_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC5/UART_INT.c **** 
  69:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC5/UART_INT.c ****         UART_RXISR_EntryCallback();
  71:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_RXISR_ENTRY_CALLBACK */
  72:Generated_Source\PSoC5/UART_INT.c **** 
  73:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
  74:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_START` */
  75:Generated_Source\PSoC5/UART_INT.c **** 
  76:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC5/UART_INT.c **** 
  78:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC5/UART_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC5/UART_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 3


  82:Generated_Source\PSoC5/UART_INT.c **** 
  83:Generated_Source\PSoC5/UART_INT.c ****         do
  84:Generated_Source\PSoC5/UART_INT.c ****         {
  85:Generated_Source\PSoC5/UART_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC5/UART_INT.c ****             readStatus = UART_RXSTATUS_REG;
  34              		.loc 1 86 0
  35 0000 1E4B     		ldr	r3, .L7
  36 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  37 0004 DBB2     		uxtb	r3, r3
  38              	.LVL0:
  87:Generated_Source\PSoC5/UART_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  88:Generated_Source\PSoC5/UART_INT.c ****             *  of the user code in UART_RXISR_ERROR` section. 
  89:Generated_Source\PSoC5/UART_INT.c ****             */
  90:Generated_Source\PSoC5/UART_INT.c ****             readData = readStatus;
  91:Generated_Source\PSoC5/UART_INT.c **** 
  92:Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & (UART_RX_STS_BREAK | 
  39              		.loc 1 92 0
  40 0006 13F01E0F 		tst	r3, #30
  41 000a 05D0     		beq	.L2
  93:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_OVERRUN)) != 0u)
  96:Generated_Source\PSoC5/UART_INT.c ****             {
  97:Generated_Source\PSoC5/UART_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC5/UART_INT.c ****                 UART_errorStatus |= readStatus & ( UART_RX_STS_BREAK | 
  42              		.loc 1 98 0
  43 000c 1C48     		ldr	r0, .L7+4
  44 000e 03F01E02 		and	r2, r3, #30
  45 0012 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
  46 0014 0A43     		orrs	r2, r2, r1
  47 0016 0270     		strb	r2, [r0]
  48              	.L2:
  49 0018 03F02003 		and	r3, r3, #32
  50              	.LVL1:
  99:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_STOP_ERROR | 
 101:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_OVERRUN);
 102:Generated_Source\PSoC5/UART_INT.c ****                 /* `#START UART_RXISR_ERROR` */
 103:Generated_Source\PSoC5/UART_INT.c **** 
 104:Generated_Source\PSoC5/UART_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC5/UART_INT.c ****                 
 106:Generated_Source\PSoC5/UART_INT.c ****             #ifdef UART_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC5/UART_INT.c ****                 UART_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC5/UART_INT.c ****             #endif /* UART_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC5/UART_INT.c ****             }
 110:Generated_Source\PSoC5/UART_INT.c ****             
 111:Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
  51              		.loc 1 111 0
  52 001c 03F0FF02 		and	r2, r3, #255
  53 0020 002B     		cmp	r3, #0
  54 0022 27D0     		beq	.L3
 112:Generated_Source\PSoC5/UART_INT.c ****             {
 113:Generated_Source\PSoC5/UART_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC5/UART_INT.c ****                 readData = UART_RXDATA_REG;
  55              		.loc 1 114 0
  56 0024 174B     		ldr	r3, .L7+8
  57 0026 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 4


  58 0028 C9B2     		uxtb	r1, r1
  59              	.LVL2:
 115:Generated_Source\PSoC5/UART_INT.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC5/UART_INT.c ****                 if(UART_rxAddressMode == (uint8)UART__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC5/UART_INT.c ****                 {
 118:Generated_Source\PSoC5/UART_INT.c ****                     if((readStatus & UART_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC5/UART_INT.c ****                     {
 120:Generated_Source\PSoC5/UART_INT.c ****                         if ((readStatus & UART_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC5/UART_INT.c ****                         {
 122:Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 1u;
 123:Generated_Source\PSoC5/UART_INT.c ****                         }
 124:Generated_Source\PSoC5/UART_INT.c ****                         else
 125:Generated_Source\PSoC5/UART_INT.c ****                         {
 126:Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 0u;
 127:Generated_Source\PSoC5/UART_INT.c ****                         }
 128:Generated_Source\PSoC5/UART_INT.c ****                     }
 129:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxAddressDetected != 0u)
 130:Generated_Source\PSoC5/UART_INT.c ****                     {   /* Store only addressed data */
 131:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBuffer[UART_rxBufferWrite] = readData;
 132:Generated_Source\PSoC5/UART_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC5/UART_INT.c ****                     }
 134:Generated_Source\PSoC5/UART_INT.c ****                 }
 135:Generated_Source\PSoC5/UART_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC5/UART_INT.c ****                 {
 137:Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBuffer[UART_rxBufferWrite] = readData;
 138:Generated_Source\PSoC5/UART_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC5/UART_INT.c ****                 }
 140:Generated_Source\PSoC5/UART_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC5/UART_INT.c ****                 UART_rxBuffer[UART_rxBufferWrite] = readData;
  60              		.loc 1 141 0
  61 002a 174B     		ldr	r3, .L7+12
  62 002c 1B88     		ldrh	r3, [r3]
  63 002e 9BB2     		uxth	r3, r3
  64 0030 1648     		ldr	r0, .L7+16
  65 0032 C154     		strb	r1, [r0, r3]
  66              	.LVL3:
 142:Generated_Source\PSoC5/UART_INT.c ****                 increment_pointer = 1u;
 143:Generated_Source\PSoC5/UART_INT.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC5/UART_INT.c **** 
 145:Generated_Source\PSoC5/UART_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC5/UART_INT.c ****                 if(increment_pointer != 0u)
 147:Generated_Source\PSoC5/UART_INT.c ****                 {
 148:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferLoopDetect != 0u)
  67              		.loc 1 148 0
  68 0034 164B     		ldr	r3, .L7+20
  69 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70 0038 13F0FF0F 		tst	r3, #255
  71 003c 02D0     		beq	.L4
 149:Generated_Source\PSoC5/UART_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferOverflow = 1u;
  72              		.loc 1 150 0
  73 003e 0121     		movs	r1, #1
  74              	.LVL4:
  75 0040 144B     		ldr	r3, .L7+24
  76 0042 1970     		strb	r1, [r3]
  77              	.L4:
 151:Generated_Source\PSoC5/UART_INT.c ****                     }
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 5


 152:Generated_Source\PSoC5/UART_INT.c ****                     /* Set next pointer. */
 153:Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBufferWrite++;
  78              		.loc 1 153 0
  79 0044 1049     		ldr	r1, .L7+12
  80 0046 0B88     		ldrh	r3, [r1]
  81 0048 9BB2     		uxth	r3, r3
  82 004a 0133     		adds	r3, r3, #1
  83 004c 9BB2     		uxth	r3, r3
  84 004e 0B80     		strh	r3, [r1]	@ movhi
 154:Generated_Source\PSoC5/UART_INT.c **** 
 155:Generated_Source\PSoC5/UART_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite >= UART_RX_BUFFER_SIZE)
  85              		.loc 1 156 0
  86 0050 0B88     		ldrh	r3, [r1]
  87 0052 9BB2     		uxth	r3, r3
  88 0054 FF2B     		cmp	r3, #255
  89 0056 02D9     		bls	.L5
 157:Generated_Source\PSoC5/UART_INT.c ****                     {
 158:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferWrite = 0u;
  90              		.loc 1 158 0
  91 0058 0021     		movs	r1, #0
  92 005a 0B4B     		ldr	r3, .L7+12
  93 005c 1980     		strh	r1, [r3]	@ movhi
  94              	.L5:
 159:Generated_Source\PSoC5/UART_INT.c ****                     }
 160:Generated_Source\PSoC5/UART_INT.c **** 
 161:Generated_Source\PSoC5/UART_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite == UART_rxBufferRead)
  95              		.loc 1 162 0
  96 005e 0A4B     		ldr	r3, .L7+12
  97 0060 1988     		ldrh	r1, [r3]
  98 0062 89B2     		uxth	r1, r1
  99 0064 0C4B     		ldr	r3, .L7+28
 100 0066 1B88     		ldrh	r3, [r3]
 101 0068 9BB2     		uxth	r3, r3
 102 006a 9942     		cmp	r1, r3
 103 006c 02D1     		bne	.L3
 163:Generated_Source\PSoC5/UART_INT.c ****                     {
 164:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferLoopDetect = 1u;
 104              		.loc 1 164 0
 105 006e 0121     		movs	r1, #1
 106 0070 074B     		ldr	r3, .L7+20
 107 0072 1970     		strb	r1, [r3]
 108              	.LVL5:
 109              	.L3:
 165:Generated_Source\PSoC5/UART_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC5/UART_INT.c ****                         #if (UART_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC5/UART_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC5/UART_INT.c ****                             UART_RXSTATUS_MASK_REG  &= (uint8)~UART_RX_STS_FIFO_NOTEMPTY;
 169:Generated_Source\PSoC5/UART_INT.c ****                             CyIntClearPending(UART_RX_VECT_NUM);
 170:Generated_Source\PSoC5/UART_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC5/UART_INT.c ****                         #endif /* (UART_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC5/UART_INT.c ****                     }
 173:Generated_Source\PSoC5/UART_INT.c ****                 }
 174:Generated_Source\PSoC5/UART_INT.c ****             }
 175:Generated_Source\PSoC5/UART_INT.c ****         }while((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 110              		.loc 1 175 0
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 6


 111 0074 002A     		cmp	r2, #0
 112 0076 C3D1     		bne	.L6
 176:Generated_Source\PSoC5/UART_INT.c **** 
 177:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_END` */
 179:Generated_Source\PSoC5/UART_INT.c **** 
 180:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC5/UART_INT.c **** 
 182:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC5/UART_INT.c ****         UART_RXISR_ExitCallback();
 184:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC5/UART_INT.c **** 
 186:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC5/UART_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC5/UART_INT.c ****     }
 113              		.loc 1 189 0
 114 0078 7047     		bx	lr
 115              	.L8:
 116 007a 00BF     		.align	2
 117              	.L7:
 118 007c 68640040 		.word	1073767528
 119 0080 00000000 		.word	UART_errorStatus
 120 0084 4A650040 		.word	1073767754
 121 0088 00000000 		.word	UART_rxBufferWrite
 122 008c 00000000 		.word	UART_rxBuffer
 123 0090 00000000 		.word	UART_rxBufferLoopDetect
 124 0094 00000000 		.word	UART_rxBufferOverflow
 125 0098 00000000 		.word	UART_rxBufferRead
 126              		.cfi_endproc
 127              	.LFE0:
 128              		.size	UART_RXISR, .-UART_RXISR
 129              		.text
 130              	.Letext0:
 131              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 132              		.file 3 "Generated_Source\\PSoC5\\UART.h"
 133              		.section	.debug_info,"",%progbits
 134              	.Ldebug_info0:
 135 0000 59010000 		.4byte	0x159
 136 0004 0400     		.2byte	0x4
 137 0006 00000000 		.4byte	.Ldebug_abbrev0
 138 000a 04       		.byte	0x4
 139 000b 01       		.uleb128 0x1
 140 000c 4F000000 		.4byte	.LASF26
 141 0010 0C       		.byte	0xc
 142 0011 28020000 		.4byte	.LASF27
 143 0015 BF010000 		.4byte	.LASF28
 144 0019 00000000 		.4byte	.Ldebug_ranges0+0
 145 001d 00000000 		.4byte	0
 146 0021 00000000 		.4byte	.Ldebug_line0
 147 0025 02       		.uleb128 0x2
 148 0026 01       		.byte	0x1
 149 0027 06       		.byte	0x6
 150 0028 1C020000 		.4byte	.LASF0
 151 002c 02       		.uleb128 0x2
 152 002d 01       		.byte	0x1
 153 002e 08       		.byte	0x8
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 7


 154 002f 41000000 		.4byte	.LASF1
 155 0033 02       		.uleb128 0x2
 156 0034 02       		.byte	0x2
 157 0035 05       		.byte	0x5
 158 0036 B5010000 		.4byte	.LASF2
 159 003a 02       		.uleb128 0x2
 160 003b 02       		.byte	0x2
 161 003c 07       		.byte	0x7
 162 003d 18000000 		.4byte	.LASF3
 163 0041 02       		.uleb128 0x2
 164 0042 04       		.byte	0x4
 165 0043 05       		.byte	0x5
 166 0044 02020000 		.4byte	.LASF4
 167 0048 02       		.uleb128 0x2
 168 0049 04       		.byte	0x4
 169 004a 07       		.byte	0x7
 170 004b E2000000 		.4byte	.LASF5
 171 004f 02       		.uleb128 0x2
 172 0050 08       		.byte	0x8
 173 0051 05       		.byte	0x5
 174 0052 7D010000 		.4byte	.LASF6
 175 0056 02       		.uleb128 0x2
 176 0057 08       		.byte	0x8
 177 0058 07       		.byte	0x7
 178 0059 47010000 		.4byte	.LASF7
 179 005d 03       		.uleb128 0x3
 180 005e 04       		.byte	0x4
 181 005f 05       		.byte	0x5
 182 0060 696E7400 		.ascii	"int\000"
 183 0064 02       		.uleb128 0x2
 184 0065 04       		.byte	0x4
 185 0066 07       		.byte	0x7
 186 0067 3A010000 		.4byte	.LASF8
 187 006b 04       		.uleb128 0x4
 188 006c F4000000 		.4byte	.LASF9
 189 0070 02       		.byte	0x2
 190 0071 E901     		.2byte	0x1e9
 191 0073 2C000000 		.4byte	0x2c
 192 0077 04       		.uleb128 0x4
 193 0078 20010000 		.4byte	.LASF10
 194 007c 02       		.byte	0x2
 195 007d EA01     		.2byte	0x1ea
 196 007f 3A000000 		.4byte	0x3a
 197 0083 02       		.uleb128 0x2
 198 0084 04       		.byte	0x4
 199 0085 04       		.byte	0x4
 200 0086 12000000 		.4byte	.LASF11
 201 008a 02       		.uleb128 0x2
 202 008b 08       		.byte	0x8
 203 008c 04       		.byte	0x4
 204 008d 08010000 		.4byte	.LASF12
 205 0091 02       		.uleb128 0x2
 206 0092 01       		.byte	0x1
 207 0093 08       		.byte	0x8
 208 0094 0B020000 		.4byte	.LASF13
 209 0098 04       		.uleb128 0x4
 210 0099 DD000000 		.4byte	.LASF14
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 8


 211 009d 02       		.byte	0x2
 212 009e 9302     		.2byte	0x293
 213 00a0 A4000000 		.4byte	0xa4
 214 00a4 05       		.uleb128 0x5
 215 00a5 6B000000 		.4byte	0x6b
 216 00a9 05       		.uleb128 0x5
 217 00aa 77000000 		.4byte	0x77
 218 00ae 02       		.uleb128 0x2
 219 00af 08       		.byte	0x8
 220 00b0 04       		.byte	0x4
 221 00b1 10020000 		.4byte	.LASF15
 222 00b5 02       		.uleb128 0x2
 223 00b6 04       		.byte	0x4
 224 00b7 07       		.byte	0x7
 225 00b8 74010000 		.4byte	.LASF16
 226 00bc 06       		.uleb128 0x6
 227 00bd 2B000000 		.4byte	.LASF29
 228 00c1 01       		.byte	0x1
 229 00c2 3B       		.byte	0x3b
 230 00c3 00000000 		.4byte	.LFB0
 231 00c7 9C000000 		.4byte	.LFE0-.LFB0
 232 00cb 01       		.uleb128 0x1
 233 00cc 9C       		.byte	0x9c
 234 00cd FF000000 		.4byte	0xff
 235 00d1 07       		.uleb128 0x7
 236 00d2 4A020000 		.4byte	.LASF17
 237 00d6 01       		.byte	0x1
 238 00d7 3D       		.byte	0x3d
 239 00d8 6B000000 		.4byte	0x6b
 240 00dc 00000000 		.4byte	.LLST0
 241 00e0 07       		.uleb128 0x7
 242 00e1 36000000 		.4byte	.LASF18
 243 00e5 01       		.byte	0x1
 244 00e6 3E       		.byte	0x3e
 245 00e7 6B000000 		.4byte	0x6b
 246 00eb 1E000000 		.4byte	.LLST1
 247 00ef 07       		.uleb128 0x7
 248 00f0 8B010000 		.4byte	.LASF19
 249 00f4 01       		.byte	0x1
 250 00f5 3F       		.byte	0x3f
 251 00f6 6B000000 		.4byte	0x6b
 252 00fa 31000000 		.4byte	.LLST2
 253 00fe 00       		.byte	0
 254 00ff 08       		.uleb128 0x8
 255 0100 0F010000 		.4byte	.LASF20
 256 0104 03       		.byte	0x3
 257 0105 3D01     		.2byte	0x13d
 258 0107 6B000000 		.4byte	0x6b
 259 010b 09       		.uleb128 0x9
 260 010c A4000000 		.4byte	0xa4
 261 0110 1B010000 		.4byte	0x11b
 262 0114 0A       		.uleb128 0xa
 263 0115 B5000000 		.4byte	0xb5
 264 0119 FF       		.byte	0xff
 265 011a 00       		.byte	0
 266 011b 08       		.uleb128 0x8
 267 011c FA000000 		.4byte	.LASF21
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 9


 268 0120 03       		.byte	0x3
 269 0121 3E01     		.2byte	0x13e
 270 0123 27010000 		.4byte	0x127
 271 0127 05       		.uleb128 0x5
 272 0128 0B010000 		.4byte	0x10b
 273 012c 08       		.uleb128 0x8
 274 012d 00000000 		.4byte	.LASF22
 275 0131 03       		.byte	0x3
 276 0132 3F01     		.2byte	0x13f
 277 0134 A9000000 		.4byte	0xa9
 278 0138 08       		.uleb128 0x8
 279 0139 27010000 		.4byte	.LASF23
 280 013d 03       		.byte	0x3
 281 013e 4001     		.2byte	0x140
 282 0140 A9000000 		.4byte	0xa9
 283 0144 08       		.uleb128 0x8
 284 0145 9D010000 		.4byte	.LASF24
 285 0149 03       		.byte	0x3
 286 014a 4101     		.2byte	0x141
 287 014c A4000000 		.4byte	0xa4
 288 0150 08       		.uleb128 0x8
 289 0151 5E010000 		.4byte	.LASF25
 290 0155 03       		.byte	0x3
 291 0156 4201     		.2byte	0x142
 292 0158 A4000000 		.4byte	0xa4
 293 015c 00       		.byte	0
 294              		.section	.debug_abbrev,"",%progbits
 295              	.Ldebug_abbrev0:
 296 0000 01       		.uleb128 0x1
 297 0001 11       		.uleb128 0x11
 298 0002 01       		.byte	0x1
 299 0003 25       		.uleb128 0x25
 300 0004 0E       		.uleb128 0xe
 301 0005 13       		.uleb128 0x13
 302 0006 0B       		.uleb128 0xb
 303 0007 03       		.uleb128 0x3
 304 0008 0E       		.uleb128 0xe
 305 0009 1B       		.uleb128 0x1b
 306 000a 0E       		.uleb128 0xe
 307 000b 55       		.uleb128 0x55
 308 000c 17       		.uleb128 0x17
 309 000d 11       		.uleb128 0x11
 310 000e 01       		.uleb128 0x1
 311 000f 10       		.uleb128 0x10
 312 0010 17       		.uleb128 0x17
 313 0011 00       		.byte	0
 314 0012 00       		.byte	0
 315 0013 02       		.uleb128 0x2
 316 0014 24       		.uleb128 0x24
 317 0015 00       		.byte	0
 318 0016 0B       		.uleb128 0xb
 319 0017 0B       		.uleb128 0xb
 320 0018 3E       		.uleb128 0x3e
 321 0019 0B       		.uleb128 0xb
 322 001a 03       		.uleb128 0x3
 323 001b 0E       		.uleb128 0xe
 324 001c 00       		.byte	0
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 10


 325 001d 00       		.byte	0
 326 001e 03       		.uleb128 0x3
 327 001f 24       		.uleb128 0x24
 328 0020 00       		.byte	0
 329 0021 0B       		.uleb128 0xb
 330 0022 0B       		.uleb128 0xb
 331 0023 3E       		.uleb128 0x3e
 332 0024 0B       		.uleb128 0xb
 333 0025 03       		.uleb128 0x3
 334 0026 08       		.uleb128 0x8
 335 0027 00       		.byte	0
 336 0028 00       		.byte	0
 337 0029 04       		.uleb128 0x4
 338 002a 16       		.uleb128 0x16
 339 002b 00       		.byte	0
 340 002c 03       		.uleb128 0x3
 341 002d 0E       		.uleb128 0xe
 342 002e 3A       		.uleb128 0x3a
 343 002f 0B       		.uleb128 0xb
 344 0030 3B       		.uleb128 0x3b
 345 0031 05       		.uleb128 0x5
 346 0032 49       		.uleb128 0x49
 347 0033 13       		.uleb128 0x13
 348 0034 00       		.byte	0
 349 0035 00       		.byte	0
 350 0036 05       		.uleb128 0x5
 351 0037 35       		.uleb128 0x35
 352 0038 00       		.byte	0
 353 0039 49       		.uleb128 0x49
 354 003a 13       		.uleb128 0x13
 355 003b 00       		.byte	0
 356 003c 00       		.byte	0
 357 003d 06       		.uleb128 0x6
 358 003e 2E       		.uleb128 0x2e
 359 003f 01       		.byte	0x1
 360 0040 3F       		.uleb128 0x3f
 361 0041 19       		.uleb128 0x19
 362 0042 03       		.uleb128 0x3
 363 0043 0E       		.uleb128 0xe
 364 0044 3A       		.uleb128 0x3a
 365 0045 0B       		.uleb128 0xb
 366 0046 3B       		.uleb128 0x3b
 367 0047 0B       		.uleb128 0xb
 368 0048 27       		.uleb128 0x27
 369 0049 19       		.uleb128 0x19
 370 004a 11       		.uleb128 0x11
 371 004b 01       		.uleb128 0x1
 372 004c 12       		.uleb128 0x12
 373 004d 06       		.uleb128 0x6
 374 004e 40       		.uleb128 0x40
 375 004f 18       		.uleb128 0x18
 376 0050 9742     		.uleb128 0x2117
 377 0052 19       		.uleb128 0x19
 378 0053 01       		.uleb128 0x1
 379 0054 13       		.uleb128 0x13
 380 0055 00       		.byte	0
 381 0056 00       		.byte	0
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 11


 382 0057 07       		.uleb128 0x7
 383 0058 34       		.uleb128 0x34
 384 0059 00       		.byte	0
 385 005a 03       		.uleb128 0x3
 386 005b 0E       		.uleb128 0xe
 387 005c 3A       		.uleb128 0x3a
 388 005d 0B       		.uleb128 0xb
 389 005e 3B       		.uleb128 0x3b
 390 005f 0B       		.uleb128 0xb
 391 0060 49       		.uleb128 0x49
 392 0061 13       		.uleb128 0x13
 393 0062 02       		.uleb128 0x2
 394 0063 17       		.uleb128 0x17
 395 0064 00       		.byte	0
 396 0065 00       		.byte	0
 397 0066 08       		.uleb128 0x8
 398 0067 34       		.uleb128 0x34
 399 0068 00       		.byte	0
 400 0069 03       		.uleb128 0x3
 401 006a 0E       		.uleb128 0xe
 402 006b 3A       		.uleb128 0x3a
 403 006c 0B       		.uleb128 0xb
 404 006d 3B       		.uleb128 0x3b
 405 006e 05       		.uleb128 0x5
 406 006f 49       		.uleb128 0x49
 407 0070 13       		.uleb128 0x13
 408 0071 3F       		.uleb128 0x3f
 409 0072 19       		.uleb128 0x19
 410 0073 3C       		.uleb128 0x3c
 411 0074 19       		.uleb128 0x19
 412 0075 00       		.byte	0
 413 0076 00       		.byte	0
 414 0077 09       		.uleb128 0x9
 415 0078 01       		.uleb128 0x1
 416 0079 01       		.byte	0x1
 417 007a 49       		.uleb128 0x49
 418 007b 13       		.uleb128 0x13
 419 007c 01       		.uleb128 0x1
 420 007d 13       		.uleb128 0x13
 421 007e 00       		.byte	0
 422 007f 00       		.byte	0
 423 0080 0A       		.uleb128 0xa
 424 0081 21       		.uleb128 0x21
 425 0082 00       		.byte	0
 426 0083 49       		.uleb128 0x49
 427 0084 13       		.uleb128 0x13
 428 0085 2F       		.uleb128 0x2f
 429 0086 0B       		.uleb128 0xb
 430 0087 00       		.byte	0
 431 0088 00       		.byte	0
 432 0089 00       		.byte	0
 433              		.section	.debug_loc,"",%progbits
 434              	.Ldebug_loc0:
 435              	.LLST0:
 436 0000 06000000 		.4byte	.LVL0
 437 0004 1C000000 		.4byte	.LVL1
 438 0008 0100     		.2byte	0x1
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 12


 439 000a 53       		.byte	0x53
 440 000b 2A000000 		.4byte	.LVL2
 441 000f 40000000 		.4byte	.LVL4
 442 0013 0100     		.2byte	0x1
 443 0015 51       		.byte	0x51
 444 0016 00000000 		.4byte	0
 445 001a 00000000 		.4byte	0
 446              	.LLST1:
 447 001e 06000000 		.4byte	.LVL0
 448 0022 1C000000 		.4byte	.LVL1
 449 0026 0100     		.2byte	0x1
 450 0028 53       		.byte	0x53
 451 0029 00000000 		.4byte	0
 452 002d 00000000 		.4byte	0
 453              	.LLST2:
 454 0031 34000000 		.4byte	.LVL3
 455 0035 74000000 		.4byte	.LVL5
 456 0039 0200     		.2byte	0x2
 457 003b 31       		.byte	0x31
 458 003c 9F       		.byte	0x9f
 459 003d 00000000 		.4byte	0
 460 0041 00000000 		.4byte	0
 461              		.section	.debug_aranges,"",%progbits
 462 0000 1C000000 		.4byte	0x1c
 463 0004 0200     		.2byte	0x2
 464 0006 00000000 		.4byte	.Ldebug_info0
 465 000a 04       		.byte	0x4
 466 000b 00       		.byte	0
 467 000c 0000     		.2byte	0
 468 000e 0000     		.2byte	0
 469 0010 00000000 		.4byte	.LFB0
 470 0014 9C000000 		.4byte	.LFE0-.LFB0
 471 0018 00000000 		.4byte	0
 472 001c 00000000 		.4byte	0
 473              		.section	.debug_ranges,"",%progbits
 474              	.Ldebug_ranges0:
 475 0000 00000000 		.4byte	.LFB0
 476 0004 9C000000 		.4byte	.LFE0
 477 0008 00000000 		.4byte	0
 478 000c 00000000 		.4byte	0
 479              		.section	.debug_line,"",%progbits
 480              	.Ldebug_line0:
 481 0000 7D000000 		.section	.debug_str,"MS",%progbits,1
 481      02004F00 
 481      00000201 
 481      FB0E0D00 
 481      01010101 
 482              	.LASF22:
 483 0000 55415254 		.ascii	"UART_rxBufferRead\000"
 483      5F727842 
 483      75666665 
 483      72526561 
 483      6400
 484              	.LASF11:
 485 0012 666C6F61 		.ascii	"float\000"
 485      7400
 486              	.LASF3:
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 13


 487 0018 73686F72 		.ascii	"short unsigned int\000"
 487      7420756E 
 487      7369676E 
 487      65642069 
 487      6E7400
 488              	.LASF29:
 489 002b 55415254 		.ascii	"UART_RXISR\000"
 489      5F525849 
 489      535200
 490              	.LASF18:
 491 0036 72656164 		.ascii	"readStatus\000"
 491      53746174 
 491      757300
 492              	.LASF1:
 493 0041 756E7369 		.ascii	"unsigned char\000"
 493      676E6564 
 493      20636861 
 493      7200
 494              	.LASF26:
 495 004f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 495      43313120 
 495      352E342E 
 495      31203230 
 495      31363036 
 496 0082 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 496      20726576 
 496      6973696F 
 496      6E203233 
 496      37373135 
 497 00b5 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 497      66756E63 
 497      74696F6E 
 497      2D736563 
 497      74696F6E 
 498              	.LASF14:
 499 00dd 72656738 		.ascii	"reg8\000"
 499      00
 500              	.LASF5:
 501 00e2 6C6F6E67 		.ascii	"long unsigned int\000"
 501      20756E73 
 501      69676E65 
 501      6420696E 
 501      7400
 502              	.LASF9:
 503 00f4 75696E74 		.ascii	"uint8\000"
 503      3800
 504              	.LASF21:
 505 00fa 55415254 		.ascii	"UART_rxBuffer\000"
 505      5F727842 
 505      75666665 
 505      7200
 506              	.LASF12:
 507 0108 646F7562 		.ascii	"double\000"
 507      6C6500
 508              	.LASF20:
 509 010f 55415254 		.ascii	"UART_errorStatus\000"
 509      5F657272 
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 14


 509      6F725374 
 509      61747573 
 509      00
 510              	.LASF10:
 511 0120 75696E74 		.ascii	"uint16\000"
 511      313600
 512              	.LASF23:
 513 0127 55415254 		.ascii	"UART_rxBufferWrite\000"
 513      5F727842 
 513      75666665 
 513      72577269 
 513      746500
 514              	.LASF8:
 515 013a 756E7369 		.ascii	"unsigned int\000"
 515      676E6564 
 515      20696E74 
 515      00
 516              	.LASF7:
 517 0147 6C6F6E67 		.ascii	"long long unsigned int\000"
 517      206C6F6E 
 517      6720756E 
 517      7369676E 
 517      65642069 
 518              	.LASF25:
 519 015e 55415254 		.ascii	"UART_rxBufferOverflow\000"
 519      5F727842 
 519      75666665 
 519      724F7665 
 519      72666C6F 
 520              	.LASF16:
 521 0174 73697A65 		.ascii	"sizetype\000"
 521      74797065 
 521      00
 522              	.LASF6:
 523 017d 6C6F6E67 		.ascii	"long long int\000"
 523      206C6F6E 
 523      6720696E 
 523      7400
 524              	.LASF19:
 525 018b 696E6372 		.ascii	"increment_pointer\000"
 525      656D656E 
 525      745F706F 
 525      696E7465 
 525      7200
 526              	.LASF24:
 527 019d 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 527      5F727842 
 527      75666665 
 527      724C6F6F 
 527      70446574 
 528              	.LASF2:
 529 01b5 73686F72 		.ascii	"short int\000"
 529      7420696E 
 529      7400
 530              	.LASF28:
 531 01bf 433A5C5A 		.ascii	"C:\\Z80-Debug-Board\\PSoC_Program\\PSoC_Z80_Toolbox"
 531      38302D44 
ARM GAS  C:\Users\nicoz\AppData\Local\Temp\ccle2KAa.s 			page 15


 531      65627567 
 531      2D426F61 
 531      72645C50 
 532 01ef 5C427573 		.ascii	"\\BusAnalyzer.cydsn\000"
 532      416E616C 
 532      797A6572 
 532      2E637964 
 532      736E00
 533              	.LASF4:
 534 0202 6C6F6E67 		.ascii	"long int\000"
 534      20696E74 
 534      00
 535              	.LASF13:
 536 020b 63686172 		.ascii	"char\000"
 536      00
 537              	.LASF15:
 538 0210 6C6F6E67 		.ascii	"long double\000"
 538      20646F75 
 538      626C6500 
 539              	.LASF0:
 540 021c 7369676E 		.ascii	"signed char\000"
 540      65642063 
 540      68617200 
 541              	.LASF27:
 542 0228 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_INT.c\000"
 542      72617465 
 542      645F536F 
 542      75726365 
 542      5C50536F 
 543              	.LASF17:
 544 024a 72656164 		.ascii	"readData\000"
 544      44617461 
 544      00
 545              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
